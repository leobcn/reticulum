== single node features ==
* lowercase external json attribute names/params
* https support
* specify file upload permissions other than default 755/644
* include hash-type in exposed hashes. eg: "sha1-0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33"
* when an animated gif is scaled down, it does not keep it
  animated. can this be fixed?
* secure url "drm" options
* human readable status page
* allow suggested image sizes upon upload. Ie, a client knows that
  particular sizes are likely to be requested in the future so it
  might as well create them beforehand.


== cluster features ==
* retrieve views
* on fetching, find appropriate node from ring
* update read/write rings on announce
* track read/write failures
* shared secret for security
* timed goroutine that periodically announces to known neighbors
* Verification job. Runs regularly, walks the directory of images on
  the node, recalculates the hashes of the images, compares to the
  hashes they were stored as and repairs and/or rebalances them as
  necessary.
* location aware replication. Ie, you've got multiple datacenters
  where nodes run and you want to make sure that uploaded images
  always get stored to each datacenter in addition to the basic
  replication level. This provides basic disaster recovery support.

== R&D ==

* experiment with just using Riak for image storing via its luwak file
  storage. The problem with this is probably that resizing again
  requires downloading via HTTP, resizing, then re-uploading.
* is an external imagemagick process faster or does it use less memory?
* tiling large images?
* grayscale conversion? rounded corners? how complex image adjustment
  should be included? should there be a plugin API so people can write
  custom tweaks?
* format conversion? eg, let users upload a .tif and serve it as a .jpg?
